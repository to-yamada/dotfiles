[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'chriskempson/vim-tomorrow-theme'
hook_add = '''
  set t_Co=256
  au DeinAutoCmd VimEnter * nested colorscheme Tomorrow-Night-Bright
  " vimdiffの色設定
  au DeinAutoCmd VimEnter * highlight DiffAdd    ctermbg=22
  au DeinAutoCmd VimEnter * highlight DiffDelete ctermbg=52
  au DeinAutoCmd VimEnter * highlight DiffChange ctermbg=17
  au DeinAutoCmd VimEnter * highlight DiffText   ctermbg=21
'''

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  " denite キー
  noremap [denite] <Nop>
  nmap <C-d> [denite]

  " s で split
  call denite#custom#map('normal', "s", '<denite:do_action:split>')

  " v で vsplit
  call denite#custom#map('normal', "v", '<denite:do_action:vsplit>')

  " insert モードで <C-s> で split
  call denite#custom#map('insert', "<C-s>", '<denite:do_action:split>')

  " insert モードで <C-v> で vsplit
  call denite#custom#map('insert', "<C-v>", '<denite:do_action:vsplit>')

  " [denite]<C-k> で単語単位での grep
  nnoremap <silent> [denite]<C-k>
    \ :<C-u>Denite grep:::<C-r><C-w>
    \ -no-empty -mode=normal -highlight-mode-insert=Search<CR>

  " [denite]<C-r> で検索結果を開き直す
  nnoremap <silent> [denite]<C-r> :<C-u>Denite -resume
    \ -no-empty -mode=normal -highlight-mode-insert=Search<CR>

  " [denite]<C-n> で次の検索結果へ
  nnoremap <silent> [denite]<C-n> :<C-u>Denite -resume
    \ -cursor-pos=+1 -immediately<CR>

  " [denite]<C-p> で前の検索結果へ
  nnoremap <silent> [denite]<C-p> :<C-u>Denite -resume
    \ -cursor-pos=-1 -immediately<CR>

  " [denite]<C-f> でプロジェクトファイル一覧
  nnoremap <silent> [denite]<C-f> :<C-u>DeniteProjectDir file/rec
    \ -no-empty -highlight-mode-insert=Search<CR>

  " [denite]<C-s> でプロジェクトファイル一覧(default-action: split)
  nnoremap <silent> [denite]<C-s> :<C-u>DeniteProjectDir file/rec
    \ -no-empty -default-action=split -highlight-mode-insert=Search<CR>

  " [denite]<C-v> でプロジェクトファイル一覧(default-action: vsplit)
  nnoremap <silent> [denite]<C-v> :<C-u>DeniteProjectDir file/rec
    \ -no-empty -default-action=vsplit -highlight-mode-insert=Search<CR>

  " [denite]<C-o> で oldfiles 一覧
  nnoremap <silent> [denite]<C-o> :<C-u>Denite file/old
    \ -no-empty -highlight-mode-insert=Search<CR>

  " [denite]<C-d> で dotfiles 編集
  nnoremap <silent> [denite]<C-d> :<C-u>call denite#start(
    \ [{'name': 'file_rec', 'args': ['~/dotfiles']}]) -highlight-mode-insert=Search<CR>

  " ripgrep 使用
  if executable('rg')
    call denite#custom#var('file/rec', 'command',
      \ ['rg', '--files', '--glob', '!.git'])

    call denite#custom#var('grep', 'command',
      \ ['rg', '--vimgrep', '--no-heading', '--word-regexp'])
    call denite#custom#var('grep', 'default_opts', [])
    call denite#custom#var('grep', 'recursive_opts', [])
  endif
'''

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
  nnoremap [fugitive]  <Nop>
  nmap <C-g> [fugitive]
  nnoremap <silent> [fugitive]<C-s> :Gstatus<CR><C-w>T
  nnoremap <silent> [fugitive]<C-d> :Gvdiff<CR>
  nnoremap <silent> [fugitive]<C-a> :Gwrite<CR>
  nnoremap <silent> [fugitive]<C-b> :Gblame<CR>
  nnoremap <silent> [fugitive]<C-m> :Gmerge<CR>
  nnoremap <silent> [fugitive]<C-g> :Ggrep<CR>
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
  au DeinAutoCmd VimEnter * set updatetime=100
'''

[[plugins]]
repo='prabirshrestha/async.vim'

[[plugins]]
repo='prabirshrestha/vim-lsp'
hook_add='''
  if executable('clangd')
    augroup LspCpp
      au!
      autocmd User lsp_setup call lsp#register_server({
          \ 'name': 'clangd',
          \ 'cmd': {server_info->['clangd']},
          \ 'whitelist': ['c', 'cpp'],
          \ })
      autocmd FileType c setlocal omnifunc=lsp#complete
      autocmd FileType cpp setlocal omnifunc=lsp#complete
    augroup END
  endif

  if executable('solargraph')
    augroup LspRuby
      au!
      autocmd User lsp_setup call lsp#register_server({
        \ 'name': 'solargraph',
        \ 'cmd': {server_info->[&shell, &shellcmdflag, 'solargraph stdio']},
        \ 'initialization_options': {"diagnostics": "true"},
        \ 'whitelist': ['ruby'],
        \ })
      autocmd FileType ruby setlocal omnifunc=lsp#complete
    augroup END
  endif

  let g:lsp_async_completion = 0
'''

[[plugins]]
repo = 'tpope/vim-rails'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {
    \ 'colorscheme': 'Tomorrow',
    \ 'active': {
    \   'left': [ [ 'mode', 'paste' ],
    \             [ 'gitbranch', 'readonly', 'filename', 'modified', 'anzu' ] ]
    \ },
    \ 'inactive': {
    \   'left': [ [ 'mode', 'paste' ],
    \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ],
    \   'right': [ [ 'lineinfo' ],
    \              [ 'percent' ],
    \              [ 'fileformat', 'fileencoding', 'filetype' ] ]
    \ },
    \ 'component_function': {
    \   'gitbranch': 'fugitive#head',
    \   'anzu': 'anzu#search_status'
    \ },
  \ }

  " show statusbar
  set laststatus=2

  " hide --INSERT--
  set noshowmode
'''

[[plugins]]
repo = 'kassio/neoterm'
hook_add = '''
  " :Tnew の場合に挿入モードで開始
  let g:neoterm_autoinsert = 1

  " :T {cmd} 実行時に画面スクロールする
  let g:neoterm_autoscroll = 1

  "let g:neoterm_default_mod = 'vertical'   " 縦分割
  let g:neoterm_default_mod = 'belowright'  " 横分割

  " :Tnew 実行
  nnoremap <silent> <C-e><C-t> :Tnew<CR>

  " :Tnew 実行(縦分割)
  nnoremap <silent> <C-e><C-v> :vertical Tnew<CR>

  " 現在の行を実行
  nnoremap <silent> <C-e><C-e> :TREPLSendLine<CR>

  " ビジュアルモードで選択中の行を実行
  vnoremap <silent> <C-e><C-e> V:TREPLSendSelection<CR>

  " ファイルそのものを実行
  nnoremap <silent> <C-e><C-f> :TREPLSendFile<CR>

  " <Esc> で terminal-mode を抜ける
  tnoremap <Esc> <C-\><C-n>

  " <C-w> で ウィンドウ移動
  tnoremap <C-w><C-w> <C-\><C-n><C-w><C-w>
  tnoremap <C-w><C-j> <C-\><C-n><C-w><C-j>
  tnoremap <C-w><C-k> <C-\><C-n><C-w><C-k>
  tnoremap <C-w><C-h> <C-\><C-n><C-w><C-h>
  tnoremap <C-w><C-l> <C-\><C-n><C-w><C-l>
'''

[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = '''
  nmap n <Plug>(anzu-n)zz
  nmap N <Plug>(anzu-N)zz
  nmap * <Plug>(anzu-star)zz
  nmap # <Plug>(anzu-sharp)zz
  set updatetime=2000
  " 一定時間キー入力がないとき、ウインドウを移動したとき、タブを移動したときに
  " 検索ヒット数の表示を消去する
  augroup vim-anzu
    autocmd!
    autocmd CursorHold,CursorHoldI,WinLeave,TabLeave * call anzu#clear_search_status()
  augroup END
'''

[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
  let g:winresizer_start_key = '<C-e><C-w>'
  let g:winresizer_vert_resize = 1
  let g:winresizer_horiz_resize = 1
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'tpope/vim-surround'

